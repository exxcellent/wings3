<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="build" name="wingS">
    <!-- read properties from file -->
    <property file="../etc/custom-build.properties"/>
    <property file="../etc/build.properties"/>

    <property name="servlet.version" value="servlet.jar"/>
    <property name="commons-logging.version" value="commons-logging.jar"/>
	<property name="commons.codec.version" value="commons-codec-1.3.jar"/>
    <property name="regexp.version" value="jakarta-regexp-1.2.jar"/>
    <property name="beanshell.version" value="bsh-core.jar"/>
    <property name="httpclient.version" value="commons-httpclient-3.1.jar"/>
    <property name="xalan.version" value="xalan.jar"/>
    <property name="catalina.version" value="catalina.jar"/>
    <property name="jetty.version" value="jetty-util-6.1.6rc0.jar"/>
    <property name="glassfish.version" value="appserv-rt.jar"/>
	<property name="jbossweb.version" value="jbossweb.jar"/>
    <property name="junit.version" value="junit-4.4.jar"/>
    <property name="uadetector.version" value="uadetector-core-0.9.5.jar"/>
	<property name="uadetector-resource.version" value="uadetector-resources-2013.05.jar"/>
    <property name="test.log.dir" value="/tmp/" />

    <path id="build.classpath">
        <fileset dir="../thirdparty/lib">
            <include name="${servlet.version}"/>
            <include name="${commons-logging.version}"/>
			<include name="${commons-codec.version}"/>
            <include name="${regexp.version}"/>
            <include name="${beanshell.version}"/>
            <include name="${httpclient.version}"/>
            <include name="${xalan.version}"/>
            <include name="${catalina.version}"/>
            <include name="${jetty.version}"/>
        	<include name="${uadetector.version}"/>
        	<include name="${uadetector-resource.version}"/>
            <include name="${glassfish.version}"/>
        	<include name="${jbossweb.version}"/>
            <include name="${junit.version}"/>
        </fileset>
    </path>

    <path id="test.classpath">
      <fileset dir="../thirdparty/lib">
            <include name="junit-4.4.jar"/>
      </fileset>
    </path>

    <property name="test.classes.dir" value="build/test-class" />

    <fileset id="test.classes.files" dir="${test.classes.dir}" defaultexcludes="yes">
      <include name="**/*Test.class" />
      <include name="**/Test*.class" />
    </fileset>

    <filelist id="wings.js.modules" dir="src/res/org/wings/js/wings/modules">
    	<file name="namespace.js"/>
        <file name="global.js"/>
        <file name="event.js"/>
        <file name="util.js"/>
        <file name="request.js"/>
        <file name="ajax.js"/>
        <file name="update.js"/>
        <file name="layout.js"/>
        <file name="keyboard.js"/>
        <file name="dnd.js"/>
        <file name="sdnd.js"/>
        <file name="sdnd-handler.js"/>
        <file name="cursor.js"/>
    	<file name="tooltip.js"/>
    	<file name="scrollbar.js"/>
    	<file name="table.js"/>
    	<file name="splitpane.js"/>
        <file name="dialog.js"/>
        <file name="comet.js"/>
    </filelist>

	<fileset id="yui.js.modules" dir="src/res" >
		<include name="org/wings/js/yui/animation/**"/>
        <include name="org/wings/js/yui/assets/**"/>
		<include name="org/wings/js/yui/autocomplete/**"/>
		<include name="org/wings/js/yui/calendar/**"/>
		<include name="org/wings/js/yui/connection/**"/>
		<include name="org/wings/js/yui/container/**"/>
		<include name="org/wings/js/yui/datasource/**"/>
		<include name="org/wings/js/yui/dom/**"/>
		<include name="org/wings/js/yui/dragdrop/**"/>
		<include name="org/wings/js/yui/editor/**" />
		<include name="org/wings/js/yui/element/**" />
		<include name="org/wings/js/yui/event/**"/>
		<include name="org/wings/js/yui/slider/**"/>
		<include name="org/wings/js/yui/logger/**"/>
		<include name="org/wings/js/yui/utilities/**"/>
		<include name="org/wings/js/yui/yahoo/**"/>
		<include name="org/wings/js/yui/yahoo-dom-event/**"/>
    </fileset>

    <target name="prepare">
        <mkdir dir="build/class"/>
        <mkdir dir="${test.classes.dir}"/>
        <tstamp>
            <format property="wings.buildtime" pattern="yyyy-MM-dd HH:mm"/>
        </tstamp>
    </target>

    <target name="generate" depends="generate-version.java, generate-wings.js"
            description="generates all artefacts necessary to compile wingS"/>

    <target name="generate-version.java" depends="prepare">
        <!-- Generate wingS version information class -->
        <filter token="WINGS_VERSION" value="${wings.version}"/>
        <filter token="COMPILE_TIME" value="${wings.buildtime}"/>
        <copy file="${basedir}/src/res/org/wings/Version.java.in"
            tofile="${basedir}/src/java/org/wings/Version.java"
            filtering="yes"/>
    </target>

    <target name="-concat-wings.js" depends="prepare">
        <!-- Generate concatenated JS-file -->
        <concat destfile="src/res/org/wings/js/wings/wings.js" force="yes">
            <filelist refid="wings.js.modules" />
        </concat>

        <uptodate property="nominimize"
            targetfile="${basedir}/src/res/org/wings/js/wings/wings-min.js"
            srcfile="${basedir}/src/res/org/wings/js/wings/wings.js" />
    </target>

    <target name="generate-wings.js" depends="-concat-wings.js" unless="nominimize">
        <!-- Minimize concatenated JS-file -->
		<java jar="tools/yuicompressor/yuicompressor-2.3.4.jar" failonerror="true" fork="true" maxmemory="128m">
            <arg value="-v" />
            <arg value="-o" />
			<arg value="${basedir}/src/res/org/wings/js/wings/wings-min.js"/>
			<arg value="${basedir}/src/res/org/wings/js/wings/wings.js" />
            <classpath>
                <pathelement location="tools/yuicompressor/lib"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
		</java>
		<!--
        <java jar="tools/javascript-compressor/js-compressor-1.2.7.jar" failonerror="true" fork="true" maxmemory="128m">-->
		<!--
                Use this instead "-c" to achieve a greater compression and replace the
                output file with the 3rd argument to use alternative compression
                approach (55kb vs. 24kb. vs 16kb).
                <arg value="${basedir}/tools/javascript-compressor/packer.js"/>
		--><!--
			<arg value="-v"/>
			<arg value="-c"/>
			<arg value="${basedir}/src/res/org/wings/js/wings/wings.js"/>
			<classpath>
				<pathelement location="tools/javascript-compressor/js-compressor-1.2.7.jar"/>
				<pathelement path="${java.class.path}"/>
			</classpath>
		</java>
		--><!--
        <copy file="${basedir}/src/res/org/wings/js/wings/wings.js.compressed"
            tofile="${basedir}/src/res/org/wings/js/wings/wings-min.js"/>
        -->
    </target>

    <target name="compile" depends="prepare, generate">
        <javac debug="${build.debug}" deprecation="${build.deprecation}"
               encoding="utf-8" source="1.5" target="1.5"
	       srcdir="src/java" destdir="build/class">
            <classpath refid="build.classpath"/>
        </javac>
    </target>

    <target name="compile-tests" depends="prepare, generate, compile">
        <javac debug="${build.debug}" deprecation="${build.deprecation}"
               encoding="utf-8" source="1.5" target="1.5"
	       srcdir="src/test" destdir="${test.classes.dir}">
	    <classpath path="build/class"/>
            <classpath refid="build.classpath"/>
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="run-tests" depends="compile-tests"
            description="executes all tests">
        <junit fork="yes" haltonfailure="no" printsummary="on"
	       showoutput="false">
            <classpath path="build/class"/>
            <classpath path="${test.classes.dir}"/>
            <classpath path="src/res"/>
            <classpath refid="build.classpath"/>
            <classpath refid="test.classpath"/>
            <batchtest todir="${test.log.dir}">
                <fileset refid="test.classes.files" />
            </batchtest>
            <formatter type="plain" usefile="false" />
        </junit>
    </target>

    <target name="build" depends="compile" description="build">
        <mkdir dir="build/web/WEB-INF/lib"/>
        <jar jarfile="build/web/WEB-INF/lib/wings.jar">
            <fileset dir="build/class"/>
            <fileset dir="src/res">
                <exclude name="**/*.java.in"/>
            	<exclude name="org/wings/js/yui/**"/>
            </fileset>
        	<fileset refid="yui.js.modules"/>
            <manifest>
                <attribute name="framework" value="wingS framework"/>
                <attribute name="version" value="${wings.version}"/>
                <attribute name="builton" value="${wings.buildtime}"/>
            </manifest>
        </jar>
        <copy todir="build/web/WEB-INF/lib">
            <fileset dir="../thirdparty/lib">
                <include name="${regexp.version}"/>
                <include name="${beanshell.version}"/>
                <include name="${commons-logging.version}"/>
                <include name="${xalan.version}"/>
            </fileset>
        </copy>
    </target>

    <target name="zip-src" description="builds a zip containing all source files">
        <mkdir dir="build"/>
        <zip destfile="build/wings-src.zip">
            <zipfileset dir="src/java"/>
        </zip>
    </target>

    <target description="cleanup build results" name="clean">
        <delete dir="build"/>
        <delete dir="dist"/>
        <delete>
            <fileset dir="src">
                <include name="**/*.class"/>
                <include name="**/*.u"/>
                <include name="**/*.bak"/>
                <include name="**/*~"/>
                <include name="**/.#*"/>
            </fileset>
        </delete>
        <delete>
            <fileset dir=".">
                <include name="wingS*.tar.gz"/>
            </fileset>
        </delete>
        <delete file="src/java/org/wings/Version.java"/>
    </target>

    <target depends="clean,build" description="re-build everything" name="all"/>

</project>
